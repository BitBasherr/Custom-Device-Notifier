name: CI-dev

on:
  push:
  pull_request:

concurrency:
  group: ci-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}

    steps:
      # 1 ▸ Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false          # we push with a PAT instead

      # 2 ▸ Python 3.13 + pip cache
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: |
            .tools/requirements-ci.txt
            .tools/constraints.txt
            pyproject.toml

      # ────────  PHASE 1 — FORMATTERS (WRITE MODE)  ──────────────
      - name: Install formatters
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run formatters (write mode)
        run: |
          ruff format .
          ruff check --fix .

      - name: Commit & push formatting fixes (if any)
        id: commit
        if: env.GH_PAT != ''                      # run whenever PAT is set
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name  "ci-bot"
          git config user.email "ci-bot@noreply"
          git add -u
          if git diff --cached --quiet ; then
            echo "pushed=false" >> "$GITHUB_OUTPUT"
          else
            last_title=$(git log -1 --pretty=%s)
            git commit -m "Bot: $last_title CI auto-format"
            git push "https://${GH_PAT}@github.com/${{ github.repository }}" HEAD:${{ github.ref_name }}
            echo "pushed=true" >> "$GITHUB_OUTPUT"
          fi

      # If we just pushed code, stop this run and let the new one start
      - name: Skip remainder because we pushed fixes
        if: steps.commit.outputs.pushed == 'true'
        run: echo "Formatting fixes pushed – stopping early." && exit 0

      # ────────  PHASE 2 — FULL LINT / TYPE-CHECK / TESTS  ───────
      - name: Install project dependencies
        if: ${{ steps.commit.outputs.pushed != 'true' && success() }}
        run: |
          python -m pip install --upgrade pip
          pip install -r .tools/requirements-ci.txt -c .tools/constraints.txt

      - name: Cache mypy incremental results
        if: ${{ steps.commit.outputs.pushed != 'true' && success() }}
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('.tools/requirements-ci.txt','.tools/constraints.txt','custom_components/custom_device_notifier/pyproject.toml') }}-v4
          restore-keys: |
            mypy-${{ runner.os }}-

      - name: Lint & type-check (verify-only)
        if: ${{ steps.commit.outputs.pushed != 'true' && success() }}
        run: |
          ruff check .
          ruff format --check .
          # nuke any stale cache this run
          rm -rf .mypy_cache || true
          mypy custom_components/custom_device_notifier \
               --config-file custom_components/custom_device_notifier/pyproject.toml \
               --no-incremental
               --no-incremental

      - name: Run pytest
        if: ${{ steps.commit.outputs.pushed != 'true' && success() }}
        run: pytest -q
