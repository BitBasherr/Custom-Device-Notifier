name: CI-dev

on:
  push:
  pull_request:

concurrency:
  group: ci-dev-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash -euo pipefail {0}"

    steps:
    # 1 ▸ Checkout full history so we can push back fixes
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false  # we’ll push with GH_PAT, not the default token

    # 2 ▸ Python + built-in pip cache
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: "pip"
        cache-dependency-path: |
          .tools/requirements-ci.txt
          .tools/constraints.txt
          pyproject.toml

    # 3 ▸ Install deps (incl. black & ruff)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .tools/requirements-ci.txt -c .tools/constraints.txt
        # Ensure formatters are present even if not pinned above
        pip install "black>=24" "ruff[format]>=0.4"

    # 4 ▸ (Optional) show current pip-cache size
    - name: Show pip-cache size
      run: |
        [[ -d ~/.cache/pip ]] && du -sh ~/.cache/pip || echo "No pip cache yet"

    # 5 ▸ Cache mypy’s incremental data
    - uses: actions/cache@v4
      with:
        path: .mypy_cache
        key: >-
          mypy-${{ runner.os }}-${{ hashFiles('.tools/requirements-ci.txt',
                                             '.tools/constraints.txt',
                                             'pyproject.toml') }}-v1
        restore-keys: mypy-${{ runner.os }}-

    # 6 ▸ Format code in write mode
    - name: Run formatters (write mode)
      id: fmt
      run: |
        black .
        ruff format .

    # 7 ▸ Auto-commit & push formatting fixes (only on PRs / branches)
    - name: Commit & push formatting fixes
      if: github.event_name != 'merge_group'       # keep merge-queue quiet
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name  "ci-bot"
        git config user.email "ci-bot@users.noreply.github.com"
        git add -u
        if git diff --cached --quiet; then
          echo "No formatting changes to commit"
        else
          git commit -m "style: auto-format via CI"
          git push "https://${GH_PAT}@github.com/${{ github.repository }}.git" \
                   HEAD:${{ github.head_ref || github.ref_name }}
          # Mark so later steps can decide to skip
          echo "pushed=true" >> "$GITHUB_OUTPUT"
        fi
      outputs:
        pushed: ${{ steps.fmt.outcome }}

    # 8 ▸ Skip lint/tests if we just pushed (new run will start with clean tree)
    - name: Decide whether to continue
      if: steps.fmt.outcome == 'success' && steps.fmt.outputs.pushed == 'true'
      run: |
        echo "Formatting fixes pushed – skipping lint/tests in this run."
        exit 0

    # 9 ▸ Lint + type-check (read-only)
    - name: Lint / type-check
      run: |
        ruff check .
        black --check .
        flake8 . --max-line-length 88
        mypy custom_components/custom_device_notifier/__init__.py \
             --config-file custom_components/custom_device_notifier/pyproject.toml

    # 10 ▸ Unit tests
    - name: Run tests
      run: pytest -q