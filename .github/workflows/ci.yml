name: CI-dev

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash -euo pipefail {0}"

    steps:
      # 1 Checkout
      - uses: actions/checkout@v4

      # 2 Python + pip cache
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: |
            .tools/requirements-ci.txt
            .tools/constraints.txt
            pyproject.toml

      # 3 Install deps
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .tools/requirements-ci.txt -c .tools/constraints.txt

      # 4 Show pip-cache size (optional)
      - name: Show pip-cache size
        run: |
          [[ -d ~/.cache/pip ]] && du -sh ~/.cache/pip || echo "No pip cache yet"

      # 5 Cache mypy
      - uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('.tools/requirements-ci.txt', '.tools/constraints.txt', 'pyproject.toml') }}-v1
          restore-keys: mypy-${{ runner.os }}-

      # 6 FORMAT & LINT CHECKS (verify-only)
      - name: Formatting / lint / type-check
        run: |
          # Ruff (lint only)
          ruff check .
          # Black (verify only)
          black --check .
          # Flake-8 extra rules
          flake8 . --max-line-length 88
          # mypy – point at the package, keep your custom config
          mypy -p custom_device_notifier \
               --config-file custom_components/custom_device_notifier/pyproject.toml

      # 7 Unit tests
      - name: Run tests
        run: pytest -q