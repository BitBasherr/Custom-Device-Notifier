name: CI-dev

on:
  push:
  pull_request:

concurrency:
  group: ci-dev-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash -euo pipefail {0}"

    steps:
    # 1 ▸ Checkout with credentials **disabled** (we’ll push with PAT)
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    # 2 ▸ Python + built-in pip cache
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: "pip"
        cache-dependency-path: |
          .tools/requirements-ci.txt
          .tools/constraints.txt
          pyproject.toml

    # 3 ▸ Install project + tooling deps
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r .tools/requirements-ci.txt -c .tools/constraints.txt
        # ensure the formatters/linters exist
        pip install black ruff flake8 mypy

    # 4 ▸ Cache mypy
    - uses: actions/cache@v4
      with:
        path: .mypy_cache
        key: >-
          mypy-${{ runner.os }}-${{ hashFiles('.tools/requirements-ci.txt',
                                             '.tools/constraints.txt',
                                             'pyproject.toml') }}-v1
        restore-keys: mypy-${{ runner.os }}-

    # 5 ▸ Run formatters (write mode)
    - name: Format code
      run: |
        black .
        ruff format .

    # 6 ▸ Commit & push any fixes using GH_PAT
    - name: Commit & push formatting fixes
      id: push
      env:
        GH_PAT: ${{ secrets.GH_PAT }}   # ← your personal access token
      run: |
        git config user.name  "ci-bot"
        git config user.email "ci-bot@users.noreply.github.com"
        git add -u
        if git diff --cached --quiet; then
          echo "pushed=false" >> "$GITHUB_OUTPUT"
        else
          git commit -m "style: auto-format via CI"
          # figure out the branch to push to (PR branch or direct)
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          git push "https://x-access-token:${GH_PAT}@github.com/${GITHUB_REPOSITORY}.git" \
                   HEAD:"${BRANCH}"
          echo "pushed=true" >> "$GITHUB_OUTPUT"
        fi

    # 7 ▸ If we just pushed, stop & let the new run take over
    - name: Skip remainder (formatting just pushed)
      if: steps.push.outputs.pushed == 'true'
      run: echo "Run stopped after auto-format push."

    # 8 ▸ Lint / type-check
    - name: Lint & type-check
      if: steps.push.outputs.pushed != 'true'
      run: |
        ruff check .
        black --check .
        flake8 . --max-line-length 88
        mypy custom_components/custom_device_notifier/__init__.py \
             --config-file custom_components/custom_device_notifier/pyproject.toml

    # 9 ▸ Unit tests
    - name: Run tests
      if: steps.push.outputs.pushed != 'true'
      run: pytest -q