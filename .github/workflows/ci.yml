name: CI-dev

on:
  push:
  pull_request:

concurrency:
  group: ci-dev-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}

    steps:
      # 1 ▸ Checkout
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      # 2 ▸ Python + built-in pip cache
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
          cache-dependency-path: |
            .tools/requirements-ci.txt
            .tools/constraints.txt
            pyproject.toml

      # ─── PHASE 1: FORMAT & AUTO-FIX ────────────────────────────────────
      - name: Install formatters
        run: |
          python -m pip install --upgrade pip
          pip install black ruff flake8

      - name: Run formatters (write mode)
        run: |
          black .
          ruff format .

      - name: Commit & push formatting fixes
        if: github.event_name == 'pull_request'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name  "ci-bot"
          git config user.email "ci-bot@users.noreply.github.com"
          git add -u
          if git diff --cached --quiet; then
            echo "No formatting changes to commit"
          else
            git commit -m "style: auto-format via CI"
            git push "https://${GH_PAT}@github.com/${{ github.repository }}" \
                     HEAD:${{ github.head_ref }}
          fi

      # ─── PHASE 2: FULL DEPS & VERIFIED CHECKS ────────────────────────
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .tools/requirements-ci.txt -c .tools/constraints.txt

      - name: Cache Mypy incremental results
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: >-
            mypy-${{ runner.os }}-
            ${{ hashFiles('.tools/requirements-ci.txt',
                           '.tools/constraints.txt',
                           'pyproject.toml') }}-v1
          restore-keys: |
            mypy-${{ runner.os }}-

      - name: Lint & type-check
        run: |
          ruff check .
          black --check .
          flake8 . --max-line-length 88
          mypy custom_components/custom_device_notifier/__init__.py \
               --config-file custom_components/custom_device_notifier/pyproject.toml

      - name: Run tests
        run: pytest -q