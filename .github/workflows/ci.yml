name: CI-dev

on:
  push:
  pull_request:

concurrency:                        # ① never run two copies in parallel
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: "bash -euo pipefail {0}"

    steps:
    # 0 ▸ Checkout (no credentials → we’ll push with PAT)
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    # 1 ▸ setup-python … caches … install deps (unchanged)
    # -----------------------------------------------------------------

    # 2 ▸ Run formatters **in write mode**
    - name: Run formatters
      run: |
        black .
        ruff format .

    # 3 ▸ Commit & push any changes, then **exit 0** to end the job
    - name: Auto-commit formatting fixes
      id: autofix
      env:
        GH_PAT:  ${{ secrets.GH_PAT }}      # your PAT
        REPO:    ${{ github.repository }}
        BRANCH:  ${{ github.head_ref || github.ref_name }}
      run: |
        git config user.name  "ci-bot"
        git config user.email "ci-bot@users.noreply.github.com"

        git add -u
        if git diff --cached --quiet; then
          echo "Nothing to commit"
        else
          git commit -m "style: auto-format via CI"
          git push "https://x-access-token:${GH_PAT}@github.com/${REPO}.git" "HEAD:${BRANCH}"
          echo "pushed=true" >> "$GITHUB_OUTPUT"
        fi

        # ▸ If we just pushed, stop here; a *new* run will start on the fresh commit.
        [[ "$(grep -o 'pushed=true' "$GITHUB_OUTPUT" || true)" == "pushed=true" ]] && exit 0

    # 4 ▸ Lint / type-check / tests – only runs when no push occurred
    - name: Lint / type-check
      run: |
        ruff check .
        black --check .
        flake8 . --max-line-length 88
        mypy custom_components/custom_device_notifier/__init__.py \
             --config-file custom_components/custom_device_notifier/pyproject.toml

    - name: Run tests
      run: pytest -q